1. Функции и структуры преведены в соответсвие наработкам по интерфейсу. Готовы все требуемые функции.
2. Добавлено ограничение на размер передаваемого файла (не более 4 ГБ).
3. Мьютекс под вопросом (единственное для чего возможно нужен - запрещать серверу передавать загружаемый loader файл).

Обновлено 26 января:
	1. Хендлер потока  - поле структуры loader.
	2. Добавлен мьютекс (является полем loader и открывается/закрывается в void* loader_thr(void *arg))для блокировки доступа 
	   сервера к файлу во время закачки loader`ом этого файла.
	3. stop_loader гасит поток, освобождает память, выделенную под мьютекс и непосредственно загрузчик. 
	
Запуск тестирования на одном компьютере:
1. make - на выходе получаем два исполняемых файла cli и serv - клиент и сервер соответственно.
2. для чистоты эксперимента помещаем файл serv в любую другую папку (как бы перекидываем файлы между папками через сокет).
3. Кладем в папку с serv файлы, которые будем передавать. 
4. Узнаем адрес нашего компьютера "сервера" через ip address
5. В папке сервера запускаем serv: ./serv 51000, где 51000 - номер порта (можно указать любой из пользовательского диапазона)
6. В папке клиента запускаем cli:  ./cli 192.168.0.105 51000 tab.ods.  192.168.0.105 - ip, который узнали в п.4, 51000 - номер порта который указали серверу,
	tab.ods - имя файла, который хотим загрузить.
7. Если все ок, то в папке с файлом cli появится запрошенный файл.
8. Сервер работает в бесконечном цикле, чтобы выключить отправляем ему ctrl+C.
9. instr.webm - видосик с тестированием.
